name: Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Security audit
      working-directory: ./frontend
      run: npm audit --audit-level moderate

    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test

    - name: Upload frontend coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        # vitest outputs lcov to frontend/coverage/lcov.info when run from frontend dir
        files: frontend/coverage/lcov.info
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload frontend coverage artifact (fallback)
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: frontend-coverage-lcov
        path: frontend/coverage/lcov.info
    
    - name: Run ESLint
      working-directory: ./frontend
      run: npm run lint
    
    - name: Build
      working-directory: ./frontend
      run: npm run build
    
    - name: Check for build artifacts
      run: test -d frontend/.next

  build:
    name: Build Production
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Build for production
      working-directory: ./frontend
      run: npm run build
      env:
        NODE_ENV: production
